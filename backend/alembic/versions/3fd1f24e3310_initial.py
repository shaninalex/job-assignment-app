"""initial

Revision ID: 3fd1f24e3310
Revises: 
Create Date: 2024-08-15 08:35:11.980661

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '3fd1f24e3310'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('auth')
    op.drop_table('candidate')
    op.drop_table('company')
    op.drop_table('candidate_expirience')
    op.drop_table('company_manager')
    op.drop_table('accounts')
    op.drop_table('staff')
    op.drop_table('admin_staff')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('admin_staff',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('password', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='admin_staff_pkey'),
    sa.UniqueConstraint('email', name='admin_staff_email_key'),
    sa.UniqueConstraint('name', name='admin_staff_name_key'),
    sa.UniqueConstraint('password', name='admin_staff_password_key')
    )
    op.create_table('staff',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('password', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='staff_pkey'),
    sa.UniqueConstraint('email', name='staff_email_key'),
    sa.UniqueConstraint('name', name='staff_name_key'),
    sa.UniqueConstraint('password', name='staff_password_key')
    )
    op.create_table('accounts',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=30), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='accounts_pkey'),
    sa.UniqueConstraint('name', name='accounts_name_key')
    )
    op.create_table('company_manager',
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('auth_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('company_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['auth_id'], ['auth.id'], name='company_manager_auth_id_fkey'),
    sa.ForeignKeyConstraint(['company_id'], ['company.id'], name='company_manager_company_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='company_manager_pkey'),
    sa.UniqueConstraint('auth_id', name='company_manager_auth_id_key'),
    sa.UniqueConstraint('company_id', name='company_manager_company_id_key'),
    sa.UniqueConstraint('email', name='company_manager_email_key')
    )
    op.create_table('candidate_expirience',
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), autoincrement=False, nullable=False),
    sa.Column('company_name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('company_link', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('work_start', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('work_end', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('position', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('responsibility', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('candidate_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['candidate_id'], ['candidate.id'], name='candidate_expirience_candidate_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='candidate_expirience_pkey'),
    sa.UniqueConstraint('candidate_id', name='candidate_expirience_candidate_id_key')
    )
    op.create_table('company',
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=30), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='company_pkey'),
    sa.UniqueConstraint('name', name='company_name_key')
    )
    op.create_table('candidate',
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('settings', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('active', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=False),
    sa.Column('confirmed', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('photo_link', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('resume_link', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('social_accounts', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('about', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('about_additional', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('skills', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('certificates', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('auth_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['auth_id'], ['auth.id'], name='candidate_auth_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='candidate_pkey'),
    sa.UniqueConstraint('auth_id', name='candidate_auth_id_key'),
    sa.UniqueConstraint('email', name='candidate_email_key')
    )
    op.create_table('auth',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('hash', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('status', postgresql.ENUM('ACTIVE', 'BANNED', 'PENDING', name='authstatus'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='auth_pkey'),
    sa.UniqueConstraint('email', name='auth_email_key')
    )
    # ### end Alembic commands ###
